#%%
fromsklearn.metricsimportaccuracy_score
fromsklearn.model_selectionimporttrain_test_split
fromsklearn.linear_modelimportLogisticRegression
fromsklearn.treeimportDecisionTreeClassifier
fromsklearn.ensembleimportRandomForestClassifier
importmatplotlib.pyplotasplt
importseabornassns
importpandasas pd
importnumpyasnp
importwarnings
importsys
importos
os.chdir("C:/Newfolder")
df=pd.read_csv("mnist_train.csv",nrows=60000)
x=df.drop(['label'],axis=1).values
y=df['label'].values
defx_matrics(df):
x=df.drop(['label'],axis=1).values
y=df['label'].values
returnx,y
digit=x[5]
somedigit=digit.reshape(28,28)
plt.imshow(somedigit)
#%%
train,test=train_test_split(df,test_size=0.2,random_state=2)
x_train,y_train=x_matrics(train)
x_test,y_test=x_matrics(test)
rand_model=RandomForestClassifier()
rand_model.fit(x_train,y_train)
prediction=rand_model.predict(x_test)
score=accuracy_score(y_test,prediction)
print(score)
